git
swirl()
install.packages("swirl")
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y,z), 100)
is.na(myData)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0 / 0
inf - inf
inf() - inf()
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3], x[5], x[7])
c(x[3, 5 ,7])
info()
c(x[3, 5 ,7])
c(x[3], x[5], x[7])
c(3, 5, 7)
p <- c(3, 5, 7)
[c(3, 5, 7)]
c(3, 5, 7)
c(3, 5, 7)[]
info()
skip()
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <- C(1:20)
myVector <- c(1:20)
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix()
?matrix
myMatrix2 = matrix(data = 1:20, 4, 5)
identical(myMatrix, myMatrix2)
patients <- "Bill", "Gina", "Kelly", "Sean"
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, myData)
?colnames
colnames(myData) <- cnames
myData
class(4)
class(c(4, "a", TRUE))
cbind(c(1,3,5), c(3,2,10))
class(cbind(c(1,3,5), c(3,2,10)))
?vector
x <- list(2, "a", "b", TRUE)
x[[1]]
x  <- 1:4
y <- 2:3
x + y
swirl()
install(swirl)
available.packages
available.packages()
install.packages(swirl)
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
swirl()
library("swirl")
swirl()
for (i in 1:10) print(i)
for (i in 1:10) i
for (i in 1:10) print(i)
?strptime
mkdir ../data
mkdir data
touch data
pwd ../data
md data
q()
mkdir data
idr
dir
ls
dir
clEAR
mkdir data
mkdir ../data
touch data
dir.create(data)
dir.create data
x <- 1:4
class(x)
class(x)
print (x)
set.seed(1)
rpois(5,2)
?rpois
?set.seed
?ppois
library(xlsx)
install.packages("xlsx")
read.xlsx
install.packages("xlsxjars")
install.packages("rJava")
read.xlsx
install.packages("xlsx")
read.xlsx
read.xlsx()
?read.xml
install.packages("XML")
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL, useInternal=TRUJE)
doc <- xmlTreeParse(fileURL, useInternal=TRUE)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL, useInternal=TRUE)
rootnode <- xmlRoot(doc)
xmlName(rootnode)
xpathSApply(rootnode, "//zipcode=21231)
xpathSApply(doc, "//zipcode='21231'")
rslt <- xpathSApply(doc, "//zipcode='21231'")
rslt
rslt <- xpathSApply(rootnode, "//zipcode='21231'")
rslt
rslt <- xpathSApply(rootnode, "zipcode='21231'")
rslt
rslt <- xpathSApply(rootnode, "\\zipcode=21231")
rslt <- xpathSApply(rootnode, "\\zipcode='21231'")
rslt <- xpathSApply(rootnode, "\\zipcode='21231'")
rslt <- xpathSApply(rootnode, "zipcode='21231'")
rslt
rslt <- xpathSApply(rootnode, "zipcode='21231'")
df <- xmlToDataFram(doc)
df <- xmlToDataFrame(doc)
df
colname(df)
colnames(df)
nrow(df)
View(df)
rslt <- xpathSApply(doc, "zipcode='21231'")
rslt
rslt <- xpathSApply(doc, "\\zipcode='21231'")
rslt <- xpathSApply(doc, "//zipcode='21231'")
rslt
?xpathapply
?xpathApply
rslt <- xpathApply(doc, "//zipcode='21231'")
rslt
rslt <- xpathApply(doc, "//zipcode[.='21231]")
rslt <- xpathApply(doc, "//zipcode[='21231]")
rslt <- xpathApply(doc, "//zipcode['21231]")
rslt <- xpathApply(doc, //zipcode[.='21231])
rslt <- xpathApply(doc, "//zipcode[.='21231]")
rslt <- xpathApply(doc, "//zipcode[.='21231'")
rslt <- xpathApply(doc, "//zipcode[.='21231']")
rslt
nrow(rslt)
fread()
install.packages("data.table")
fread()
require(data.table)
fread()
?fread
DT <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
DY
DT
rprof
rprof()
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT$pwgtp15,by=DT$SEX)
?Devices
library(datasets)
?
?points
?dev.copy2pdf
setwd("~/GitHub/ExData_Plotting1")
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot4.R')
source('~/GitHub/ExData_Plotting1/plot4.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot4.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/createPlots.R')
createPlots()
source('~/GitHub/ExData_Plotting1/createPlots.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot4.R')
